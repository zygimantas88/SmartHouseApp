<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" version="1.1" width="512" height="512" x="0" y="0" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512" xml:space="preserve" class=""><g><path xmlns="http://www.w3.org/2000/svg" d="m174.615 100.638a6 6 0 0 0 3.758 7.608l15.5 5.248a31.076 31.076 0 0 0 39.4-19.467 6 6 0 0 0 -3.757-7.608l-39.25-13.291a6 6 0 0 0 -7.608 3.759zm17.485-14.22 26.977 9.136a19.107 19.107 0 0 1 -21.355 6.574l-9.817-3.328z" fill="#ffffff" data-original="#000000" style="" class=""/><path xmlns="http://www.w3.org/2000/svg" d="m115 128.125 9.331 3.159a16.9 16.9 0 0 0 30.251 10.245l35.463 12.009a16.9 16.9 0 0 0 30.255 10.245l9.385 3.178a6 6 0 0 0 7.607-3.758 25.52 25.52 0 0 0 -15.992-32.358l-2.358-.8a56.536 56.536 0 0 0 6.623-2.75 55.342 55.342 0 0 0 28.09-32.079l4.245-12.525a6 6 0 0 0 -3.757-7.607l-50.77-17.193a31.541 31.541 0 0 0 -13.6-49.959 31.565 31.565 0 0 0 -36.478 11.691l-17.022-2.71a6 6 0 0 0 -6.625 4 14.223 14.223 0 0 0 8.583 17.836l9.769 3.527a31.492 31.492 0 0 0 2.845 9.184l-2.716 8.02a55.639 55.639 0 0 0 6.454 48.769l-10.98-3.718a25.549 25.549 0 0 0 -32.358 15.986 6 6 0 0 0 3.755 7.608zm110.241 20.9a13.557 13.557 0 0 1 1.286 4.2l-2.692-.912a16.978 16.978 0 0 0 -2.8-8.261 13.451 13.451 0 0 1 4.204 4.976zm-13.624 5.946a4.931 4.931 0 1 1 -3.084-6.241 4.888 4.888 0 0 1 3.082 6.244zm-52.128-91.642 3.557-10.5a6 6 0 0 0 -.553-5.036 19.538 19.538 0 1 1 30.245 3.932 9.854 9.854 0 0 0 3.623 16.463l48.251 16.339-2.317 6.845a43.712 43.712 0 0 1 -82.8-28.041zm42.892 73.778a16.923 16.923 0 0 0 -8.191 5.165l-36.063-12.212a16.906 16.906 0 0 0 -3.366-9.079zm-65.811-7.546a4.922 4.922 0 1 1 9.325 3.156 4.922 4.922 0 0 1 -9.325-3.157zm-7.147-12.98a13.443 13.443 0 0 1 6.237-1.395 16.985 16.985 0 0 0 -7.175 4.836l-2.631-.891a13.519 13.519 0 0 1 3.569-2.55z" fill="#ffffff" data-original="#000000" style="" class=""/><path xmlns="http://www.w3.org/2000/svg" d="m175.356 42.29a8.057 8.057 0 0 0 7.623-5.459v-.005a8.042 8.042 0 1 0 -7.625 5.464z" fill="#ffffff" data-original="#000000" style="" class=""/><path xmlns="http://www.w3.org/2000/svg" d="m325.837 67.41c.081.07.165.139.25.206a8.136 8.136 0 0 0 2.3 1.291 8.229 8.229 0 0 0 2.6.444h.107c.091 0 .182 0 .274-.006 26.777-1.226 40.919-16.287 43.056-30.67 0-.014 0-.029.007-.044 1.529-10.845-3.834-20.386-13.347-23.742a26.253 26.253 0 0 0 -13.291-.807 25.613 25.613 0 0 0 -10.976-7.9c-9.581-3.382-19.75.768-25.3 10.315-7.403 12.675-5.848 33.335 14.32 50.913zm-3.948-44.873c2.088-3.591 5.019-5.53 8.173-5.53a8.286 8.286 0 0 1 2.765.489c2.644.933 5.256 3.237 7.553 6.662a6 6 0 0 0 6.691 2.41c3.868-1.148 7.426-1.278 10.024-.362 4.153 1.465 6.193 5.475 5.459 10.729-1.387 9.244-11.209 18.946-30.065 20.324-13.858-12.767-15.382-26.538-10.6-34.722z" fill="#ffffff" data-original="#000000" style="" class=""/><path xmlns="http://www.w3.org/2000/svg" d="m403.346 203.308c-7.407 12.676-5.853 33.336 14.315 50.915.085.075.173.147.263.216a7.745 7.745 0 0 0 4.891 1.725h.107c.092 0 .182 0 .274-.006 26.778-1.226 40.919-16.287 43.056-30.67 0-.014 0-.029.007-.044 1.529-10.845-3.834-20.386-13.346-23.741a26.224 26.224 0 0 0 -13.292-.807 25.607 25.607 0 0 0 -10.976-7.9c-9.583-3.385-19.745.768-25.299 10.312zm21.306 1c2.644.933 5.255 3.236 7.552 6.662a6 6 0 0 0 6.691 2.411c3.871-1.15 7.431-1.278 10.025-.362 4.153 1.465 6.193 5.475 5.459 10.729-1.387 9.243-11.21 18.945-30.066 20.324-13.858-12.769-15.381-26.539-10.6-34.723 2.087-3.591 5.019-5.53 8.174-5.53a8.285 8.285 0 0 1 2.765.49z" fill="#ffffff" data-original="#000000" style="" class=""/><path xmlns="http://www.w3.org/2000/svg" d="m87.684 237.39q2.335 0 4.8-.167c.112-.008.221-.018.331-.032a7.754 7.754 0 0 0 4.682-2.236c.093-.089.184-.182.271-.277 18.068-19.8 17.418-40.452 8.756-52.133a.369.369 0 0 0 -.025-.034c-6.589-8.752-17.129-11.706-26.225-7.352a26.258 26.258 0 0 0 -9.968 8.829 25.614 25.614 0 0 0 -13.351 2.172c-9.165 4.384-13.421 14.509-10.6 25.183 3.499 13.328 17.545 26.047 41.329 26.047zm-25.554-40.4a12.851 12.851 0 0 1 5.55-1.1 23.394 23.394 0 0 1 4.5.472 6 6 0 0 0 6.435-3.027c1.925-3.549 4.352-6.158 6.833-7.345 3.976-1.9 8.25-.5 11.446 3.726 5.556 7.516 5.472 21.322-6.888 35.631-18.835.771-29.642-7.889-32.048-17.056-1.367-5.178.192-9.402 4.172-11.306z" fill="#ffffff" data-original="#000000" style="" class=""/><path xmlns="http://www.w3.org/2000/svg" d="m368.322 139.519a9.07 9.07 0 0 0 -12.149 4.109l-64.448 130.323a12.28 12.28 0 0 0 5.564 16.449l28.572 14.13a12.284 12.284 0 0 0 16.45-5.563l16.047-32.45 53.175 17.91-129.424 64.631-129.43-64.633 45.773-15.434a225.861 225.861 0 0 1 19.394 31.85 17.014 17.014 0 0 0 2.992 4.279 16.848 16.848 0 1 0 22.391-25.053 265.449 265.449 0 0 1 -27.739-24l-9.694-9.8a37.328 37.328 0 0 0 -10.183-52.619c-.165-.119-.337-.231-.514-.334a37.346 37.346 0 1 0 -19.932 68.96 37.019 37.019 0 0 0 8.833-1.074l-48.825 16.464a5.974 5.974 0 0 0 -3.4 2.891l-29.475 56.09a6 6 0 0 0 2.493 8.089l29.176 15.514v72.026a6 6 0 0 0 3.388 5.4l142.143 68.726a6 6 0 0 0 5.223 0l142.14-68.726a6 6 0 0 0 3.389-5.4v-72.026l29.176-15.514a6 6 0 0 0 2.493-8.089l-29.482-56.088a5.979 5.979 0 0 0 -3.4-2.893l-.064-.021h-.014l-65.236-21.973 43.033-87.02a9.069 9.069 0 0 0 -4.11-12.148l-4.064-2.01 28.425-57.479a6 6 0 0 0 -2.718-8.038l-15.444-7.637a6 6 0 0 0 -8.038 2.718l-28.426 57.479zm-132.388 150.075a4.853 4.853 0 0 1 .166 7.573 4.911 4.911 0 0 1 -6.591-.342 5.027 5.027 0 0 1 -.882-1.253 214.136 214.136 0 0 0 -13.1-22.862c5.953 5.405 12.623 10.92 20.407 16.884zm-46.017-30.389c.39-.169.781-.331 1.166-.514l.07.1zm-39.988-36.45a25.316 25.316 0 0 1 25.227-23.181 25.494 25.494 0 0 1 10.473 2.249 35.884 35.884 0 0 1 -9.471 18.517 36.253 36.253 0 0 1 -5.643 4.76 35.868 35.868 0 0 1 -19.864 6.213 25.357 25.357 0 0 1 -.722-8.558zm7.337 20.055a47.839 47.839 0 0 0 20.012-7.8 48.217 48.217 0 0 0 7.509-6.332 47.817 47.817 0 0 0 11.056-18.42 25.229 25.229 0 0 1 -2.428 32.229 25.741 25.741 0 0 1 -1.9 1.78q-.5.422-1.022.818c-.346.263-.7.517-1.052.758a25.228 25.228 0 0 1 -32.175-3.033zm-41.566 94.132 23.971-45.6 134.388 67.11-24.766 49.53zm160.409 154.492-130.139-62.924v-61.881l103.121 54.836a6 6 0 0 0 8.183-2.614l18.835-37.671zm142.141-62.924-130.141 62.924v-110.254l18.836 37.671a6 6 0 0 0 8.184 2.614l103.121-54.836zm30.27-91.568-133.593 71.039-24.767-49.53 134.389-67.11zm-39.613-242.195 4.688 2.318-6.74 13.629-4.688-2.318zm-100.718 187.653 14.059-6.518 3.354 15.129zm28.145 1.582-3.529-15.921 52.575-106.719 9.323 4.611zm60.513-164.852 4.689 2.318-13.706 27.718-4.689-2.319zm-74.8 143.619-14.786 6.855 58.37-118.032 8.994 4.448z" fill="#ffffff" data-original="#000000" style="" class=""/><path xmlns="http://www.w3.org/2000/svg" d="m307.464 163.913a41.267 41.267 0 0 0 5.784-.41 40.967 40.967 0 1 0 -5.784.41zm23.206-23.579a28.786 28.786 0 0 1 -13.908 10.055 24.045 24.045 0 0 1 6.491-11.253 23.536 23.536 0 0 1 11.438-6.147 29.107 29.107 0 0 1 -4.021 7.345zm5.529-21.492c.083.585.142 1.169.19 1.753a35.743 35.743 0 0 0 -32.07 31.142 28.939 28.939 0 0 1 -12.614-4.527l40.106-40.11a28.912 28.912 0 0 1 4.389 11.742zm-36.221-23.927a23.189 23.189 0 0 1 -6.9 13.065 23.739 23.739 0 0 1 -13.328 6.509 29.062 29.062 0 0 1 20.228-19.574zm1.422 21.714a35.071 35.071 0 0 0 10.746-22.345 28.775 28.775 0 0 1 11.173 4.343l-40.114 40.113a28.814 28.814 0 0 1 -4.423-11.755c-.016-.114-.025-.228-.04-.342a35.6 35.6 0 0 0 22.658-10.014z" fill="#ffffff" data-original="#000000" style="" class=""/><path xmlns="http://www.w3.org/2000/svg" d="m305.02 206.446a12.151 12.151 0 0 0 -10.058-8.587 45.366 45.366 0 0 0 -52.095-20.344l-15.5 4.618a11.691 11.691 0 0 0 -6.8 17.034l10.646 18.5a44.968 44.968 0 0 1 5.886 19.759l1.213 21.313a11.7 11.7 0 0 0 11.652 11.033 11.772 11.772 0 0 0 3.356-.491l15.505-4.618a45.368 45.368 0 0 0 32.475-45.531 12.186 12.186 0 0 0 3.72-12.686zm-35.784-16.066a65.337 65.337 0 0 0 -14.374 1.223l-1.732-3.889a33.039 33.039 0 0 1 16.106 2.666zm-18.967 67.293-1.191-20.924a57.021 57.021 0 0 0 -7.464-25.061l-10.451-18.166 10.08-3 9.094 20.418a87.519 87.519 0 0 1 6.453 21.667l3.559 22.066zm21.565-7.157-.678-4.2a65.3 65.3 0 0 0 12.709-6.853 33.053 33.053 0 0 1 -12.031 11.053zm-2.649-16.428-.547-3.394a99.508 99.508 0 0 0 -7.34-24.639l-1.4-3.14c13.908-2.013 24.661 1.619 27.6 7.324.147.43.291.861.422 1.3s.245.876.357 1.315c.659 6.374-6.355 15.307-19.092 21.234z" fill="#ffffff" data-original="#000000" style="" class=""/><script>// Promises 
var _eid_promises = {}; 
// Turn the incoming message from extension 
// into pending Promise resolving 
window.addEventListener("message", function(event) { 
    if(event.source !== window) return; 
    if(event.data.src &amp;&amp; (event.data.src === "background.js")) { 
        console.log("Page received: "); 
        console.log(event.data); 
        // Get the promise 
        if(event.data.nonce) { 
            var p = _eid_promises[event.data.nonce]; 
            // resolve 
            if(event.data.result === "ok") { 
                if(event.data.signature !== undefined) { 
                    p.resolve({hex: event.data.signature}); 
                } else if(event.data.version !== undefined) { 
                    p.resolve(event.data.extension + "/" + event.data.version); 
                } else if(event.data.cert !== undefined) { 
                    p.resolve({hex: event.data.cert}); 
                } else { 
                    console.log("No idea how to handle message"); 
                    console.log(event.data); 
                } 
            } else { 
                // reject 
                p.reject(new Error(event.data.result)); 
            } 
            delete _eid_promises[event.data.nonce]; 
        } else { 
            console.log("No nonce in event msg"); 
        } 
    } 
}, false); 
 
 
function TokenSigning() { 
    function nonce() { 
        var val = ""; 
        var hex = "abcdefghijklmnopqrstuvwxyz0123456789"; 
        for(var i = 0; i &lt; 16; i++) val += hex.charAt(Math.floor(Math.random() * hex.length)); 
        return val; 
    } 
 
    function messagePromise(msg) { 
        return new Promise(function(resolve, reject) { 
            // amend with necessary metadata 
            msg["nonce"] = nonce(); 
            msg["src"] = "page.js"; 
            // send message 
            window.postMessage(msg, "*"); 
            // and store promise callbacks 
            _eid_promises[msg.nonce] = { 
                resolve: resolve, 
                reject: reject 
            }; 
        }); 
    } 
    this.getCertificate = function(options) { 
        var msg = {type: "CERT", lang: options.lang, filter: options.filter}; 
        console.log("getCertificate()"); 
        return messagePromise(msg); 
    }; 
    this.sign = function(cert, hash, options) { 
        var msg = {type: "SIGN", cert: cert.hex, hash: hash.hex, hashtype: hash.type, lang: options.lang, info: options.info}; 
        console.log("sign()"); 
        return messagePromise(msg); 
    }; 
    this.getVersion = function() { 
        console.log("getVersion()"); 
        return messagePromise({ 
            type: "VERSION" 
        }); 
    }; 
}</script></g></svg>
