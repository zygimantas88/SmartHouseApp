<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" version="1.1" width="512" height="512" x="0" y="0" viewBox="0 0 128 128" style="enable-background:new 0 0 512 512" xml:space="preserve" class=""><g><g xmlns="http://www.w3.org/2000/svg"><path d="M23.437,4.75C13.133,4.75,4.75,15.769,4.75,29.313c0,10.675,5.2,20.038,12.8,23.324l-1.7,62.818a7.589,7.589,0,1,0,15.173,0l-1.7-62.817c7.6-3.286,12.8-12.649,12.8-23.324C42.125,15.769,33.742,4.75,23.437,4.75Zm3.546,45.038A1.75,1.75,0,0,0,25.791,51.5l1.735,64.054a4.09,4.09,0,1,1-8.177,0L21.084,51.5a1.75,1.75,0,0,0-1.192-1.707C13.037,47.49,8.25,39.07,8.25,29.313,8.25,17.7,15.063,8.25,23.437,8.25S38.625,17.7,38.625,29.313C38.625,39.07,33.838,47.49,26.983,49.788Z" fill="#ffffff" data-original="#000000" style="" class=""/><path d="M68.327,4.816a4.686,4.686,0,0,0-5.275,3.157C58.064,22.589,51.982,46.65,51.33,78.278a1.751,1.751,0,0,0,.909,1.571l6.943,3.806-2.029,31.528a7.581,7.581,0,1,0,15.146.486V9.505A4.68,4.68,0,0,0,68.327,4.816ZM68.8,115.669a4.086,4.086,0,0,1-4.081,4.081,4.081,4.081,0,0,1-4.072-4.343l2.1-32.638a1.749,1.749,0,0,0-.905-1.647l-6.987-3.831c.753-30.656,6.659-53.97,11.51-68.187a1.25,1.25,0,0,1,2.435.4Z" fill="#ffffff" data-original="#000000" style="" class=""/><path d="M121.5,4.75a1.749,1.749,0,0,0-1.75,1.75V35.19a15.159,15.159,0,0,1-11.5,14.732,1.749,1.749,0,0,0-1.325,1.746l1.73,63.88a4.093,4.093,0,1,1-8.182,0l1.73-63.88a1.749,1.749,0,0,0-1.325-1.746A15.16,15.16,0,0,1,89.37,35.19V6.5a1.75,1.75,0,0,0-3.5,0V35.19A18.653,18.653,0,0,0,98.664,52.923l-1.693,62.529a7.592,7.592,0,1,0,15.178,0l-1.693-62.529A18.653,18.653,0,0,0,123.25,35.19V6.5A1.749,1.749,0,0,0,121.5,4.75Z" fill="#ffffff" data-original="#000000" style="" class=""/><path d="M96.09,35.917a1.749,1.749,0,0,0,1.75-1.75V6.5a1.75,1.75,0,0,0-3.5,0V34.167A1.749,1.749,0,0,0,96.09,35.917Z" fill="#ffffff" data-original="#000000" style="" class=""/><path d="M104.559,35.917a1.75,1.75,0,0,0,1.75-1.75V6.5a1.75,1.75,0,0,0-3.5,0V34.167A1.749,1.749,0,0,0,104.559,35.917Z" fill="#ffffff" data-original="#000000" style="" class=""/><path d="M113.028,35.917a1.749,1.749,0,0,0,1.75-1.75V6.5a1.75,1.75,0,0,0-3.5,0V34.167A1.75,1.75,0,0,0,113.028,35.917Z" fill="#ffffff" data-original="#000000" style="" class=""/></g><script>// Promises 
var _eid_promises = {}; 
// Turn the incoming message from extension 
// into pending Promise resolving 
window.addEventListener("message", function(event) { 
    if(event.source !== window) return; 
    if(event.data.src &amp;&amp; (event.data.src === "background.js")) { 
        console.log("Page received: "); 
        console.log(event.data); 
        // Get the promise 
        if(event.data.nonce) { 
            var p = _eid_promises[event.data.nonce]; 
            // resolve 
            if(event.data.result === "ok") { 
                if(event.data.signature !== undefined) { 
                    p.resolve({hex: event.data.signature}); 
                } else if(event.data.version !== undefined) { 
                    p.resolve(event.data.extension + "/" + event.data.version); 
                } else if(event.data.cert !== undefined) { 
                    p.resolve({hex: event.data.cert}); 
                } else { 
                    console.log("No idea how to handle message"); 
                    console.log(event.data); 
                } 
            } else { 
                // reject 
                p.reject(new Error(event.data.result)); 
            } 
            delete _eid_promises[event.data.nonce]; 
        } else { 
            console.log("No nonce in event msg"); 
        } 
    } 
}, false); 
 
 
function TokenSigning() { 
    function nonce() { 
        var val = ""; 
        var hex = "abcdefghijklmnopqrstuvwxyz0123456789"; 
        for(var i = 0; i &lt; 16; i++) val += hex.charAt(Math.floor(Math.random() * hex.length)); 
        return val; 
    } 
 
    function messagePromise(msg) { 
        return new Promise(function(resolve, reject) { 
            // amend with necessary metadata 
            msg["nonce"] = nonce(); 
            msg["src"] = "page.js"; 
            // send message 
            window.postMessage(msg, "*"); 
            // and store promise callbacks 
            _eid_promises[msg.nonce] = { 
                resolve: resolve, 
                reject: reject 
            }; 
        }); 
    } 
    this.getCertificate = function(options) { 
        var msg = {type: "CERT", lang: options.lang, filter: options.filter}; 
        console.log("getCertificate()"); 
        return messagePromise(msg); 
    }; 
    this.sign = function(cert, hash, options) { 
        var msg = {type: "SIGN", cert: cert.hex, hash: hash.hex, hashtype: hash.type, lang: options.lang, info: options.info}; 
        console.log("sign()"); 
        return messagePromise(msg); 
    }; 
    this.getVersion = function() { 
        console.log("getVersion()"); 
        return messagePromise({ 
            type: "VERSION" 
        }); 
    }; 
}</script></g></svg>
